

@model Contact.Pages.PaginatedList<Contact.Models.ContactViewModel.ContactViewModel>
   
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div>

<form  asp-action="Index" asp-controller="contact">
    <input class="form-control" type="text" name="Serching" >
    <br>
    <input  type="submit" class="btn btn-primary" value="Search">
    <input type="checkbox" name="sensitive" value="true" >case sensitive<br>

</form>
</div>

@if(Model.Count > 0)
{
<table class="table">
    <thead>
        <tr>
            <th>
                  <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model[1].Name)</a>
                
            </th>
            <th>
                 <a asp-action="Index" asp-route-sortOrder="@ViewData["EmailSortParm"]">@Html.DisplayNameFor(model => model[2].Email)</a>
              
            </th>
            <th>
                  <a asp-action="Index" asp-route-sortOrder="@ViewData["PhoneSortParm"]">@Html.DisplayNameFor(model => model[3].Phone)</a>
                
            </th>
            <th>
                 <a asp-action="Index" asp-route-sortOrder="@ViewData["MessageSortParm"]">@Html.DisplayNameFor(model => model[5].Message)</a>
               
            </th>
            <th>
                 <a asp-action="Index" asp-route-sortOrder="@ViewData["departementSortParm"]">@Html.DisplayNameFor(model => model[4].departementName)</a>
            
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Message)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.departementName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
} else 
{
    <div>No results found</div>
}
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

}


<a asp-action="Index"
  
   asp-route-pageNumber="@(Model.PageIndex - 1)"
  
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
  
   asp-route-pageNumber="@(Model.PageIndex + 1)"
 
   class="btn btn-default @nextDisabled">
    Next
</a>